[14. Define Python requirements]

สร้าง requirements.txt (สร้างแบบ manual เองเลย แล้วก็เขียน dependencies เอง)

[15. Create project Dockerfile]

รัน Dockerfile โดย "docker build ."

[17. Linting and Tests]

What is Linting? (Linting คือประเภทของ tools ที่เอาไว้ทำการ formatting code)
    - Tool to check code formatting
    - Highlights errors, typos, formatting issues

How we'll handling Linting (ใช้ flake8 package)
    - Instal flake8 package
    - Run flake8 through Docker Compose โดย
        'docker-compose run --rm app sh -c "flake8"'

Testing (ใช้ Django test suite)
    - Setup tests per Django app
    - Run tests through Docker Compose
        'docker-compose run --rm app sh -c "python manage.py test"'

[18. Configure flake8]

เมื่อ config เสร็จลองรัน เพื่อดูว่า build เพื่อ check ว่ามี ิbuild ได้มั้ย
"docker-compose build"

รัน command นี้เพื่อรัน flake8
'docker-compose run --rm app sh -c "flake8"'
จะต้องไม่มี error เพราะเรายังไม่มี code ซัก file เลย