[89. Tags API design]

In this section
    - Add ability to add recipe tags
    - Create model for tags
    - Add tag API endpoints
    - Update recipe endpoint
        # Adding and listing tags

Tag Model
    - name - Name of tag to create
    - user - User who created/owns tag

Tag Endpoint
    - POST - Create tag
    - PUT/PATCH - Update tags
    - DELETE - Remove tag
    - GET - List available tags

[90. Add tag model]
'docker-compose run --rm app sh -c "python manage.py test"' => รันเพื่อดูว่ามัน fail ตามที่คาดหวังมั้ย เพื่อ check ว่ามันรัน test ใหม่คุณจริงๆ

สร้าง Tag migrations
'docker-compose run --rm app sh -c "python manage.py makemigrations"'

เนื่องจาก test ก่อนหน้ามัน fail และมันไม่ได้ถอน database อันเก่าออก เลย แจ้งเตือน ว่า

'docker-compose run --rm app sh -c "python manage.py test"'

Got an error creating the test database: database "test_devdb" already exists
Type 'yes' if you would like to try deleting the test database 'test_devdb', or 'no' to cancel:
=> yes ไป

[91. Write tests for listing tags]
'docker-compose run --rm app sh -c "python manage.py test"'
[92. Implement tag listing API]
'docker-compose run --rm app sh -c "python manage.py test"'
[93. Write tests for updating tags]
'docker-compose run --rm app sh -c "python manage.py test"'
มันจะ error ที่ 'tag-detail' เพราะมันไม่รู้จัก endpoint นี้

[94. Implement update tag API]

เพรียงแค่ใส่ mixins.UpdateModelMixin เข้าไป มันก็จะได้ 'tag-detail' ทั้นที
เมื่อรัน test ก็จะผ่าน
'docker-compose run --rm app sh -c "python manage.py test"'

[96. Implement delete tag API]
'docker-compose run --rm app sh -c "python manage.py test"'