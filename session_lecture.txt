[53. Django admin overview]

What is the Django Admin?
    - Graphical User Interface for models
        # Create, Read, Update, Delete
    - Very little coding required

    เป็น feature ที่ผู้คนชอบใช้

    How to enable Django admin
        - Enabled per model
        - Inside admin.py
            # admin.site.register(Recipe)

    Customising
        - Create class based off ModelAdmin or UserAdmin
        - Override/set class variables

        Changing list of objects
            -"ordering": changes order items appear
            -"list_display": field to appear in list
        Add/update page
            -"fieldsets": control layout of page
            -"readonly_fields": fields that cannot be changed
        add page
            -"add_fieldsets": fields displayed only on add page


[54. Write tests for listing users]
เขียน test ก็ลองรันเพื่อให้มัน fail
'docker-compose run --rm app sh -c "python manage.py test"'

จะ error 'django.urls.exceptions.NoReverseMatch' เพราะเรายังไม่ได้ register url เลย

[55. Make Django admin list users]

ไปที่ admin.py ใน core app แล้วลบ code default แล้วเขียนใหม่

เมื่อ custom แล้ว register ที่ admin เสร็จก็ลองรัน test แล้วเมื่อ test ผ่านก็เข้าไปที่หน้า admin ดูว่า Users model แสดงที่หน้า admin panel หรือยัง

เมื่อเราไปดูข้อมูล user คนนึงจะเกิด error เพื่อเรา custom user model ไม่มีบาง field ที่ default user model มี
    # Unknown field(s) (last_name, first_name, username, date_joined) specified for User. Check fields/fieldsets/exclude attributes of class UserAdmin.

[56. Support modifying users]

แก้ทั้งแล้วแล้วลองรัน test แล้วเมื่อ success ก็กลับไปที่หนเา edit user อีกครั้งว่าเข้าได้หรือยัง (เนื่องจากคุณแก้เรื่อง field ไป) ก็จะเห็นว่ามันไม่ error แล้ว

[57. Support creating users]

เนื่องจากหน้า add user ที่ admin panel ยัง error เพื่อเรื่องเดิมคือ field

    * นี้คือข้อดีของการเขียน test เพราะเราจะได้เห็น error อย่างรวดเร็วตอนรัน test แทนการไป error ตอน apply อย่างอื่นจริงๆ