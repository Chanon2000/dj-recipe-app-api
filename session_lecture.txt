[104. Ingredients API Design]

Ingredients Model
    - name : Name of ingredient to create
    - user : User who owns ingredient

Ingredients Endpoint
    - /api/recipe/ingredients/
        # GET- List ingredients
    - /api/recipe/ingredients/<id>/
        # GET - Get ingredient details
        # PUT/PATCH - Update ingredient
        # DELETE - Remove ingredient
    - /api/recipe/
        # POST - Create ingredients (as part of recipe)
    - /api/recipe/<id>/
        # PUT/PATCH - Create or modify ingredients

[105. Add ingredient model]
'docker-compose run --rm app sh -c "python manage.py test"'

ทำการสนร้าง migrations เพื่อที่จะได้เอาไว้ apply ไปที่ database และ apply ที่ test ด้วย
'docker-compose run --rm app sh -c "python manage.py makemigrations"'

เพื่อรัน test อีกครั้งว่ามีพิมพ์ผิดมั้ยเป็นต้น มันจะได้แจ้ง error ตรงนี้เลย
'docker-compose run --rm app sh -c "python manage.py test"'

[106. Write tests for listing ingredients]
'docker-compose run --rm app sh -c "python manage.py test"' => ต้อง fail ตามเคยเพราะเราเขียน test ก่อน implement
[107. Implement ingredient listing API]
'docker-compose run --rm app sh -c "python manage.py test"' => ต้องผ่าน เพราะเรา implement แล้ว